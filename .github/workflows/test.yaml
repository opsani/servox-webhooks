name: Run Tests
on: [push, pull_request]

jobs:
  pytest:
    name: pytest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v2.1.3
      with:
        python-version: '3.8'
        architecture: x64
    - name: Set up Poetry cache
      uses: actions/cache@v2.1.5
      id: cached-poetry
      with:
        path: ~/.poetry
        key: poetry-${{ runner.os }}-1.1.5
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1.1.2
      if: steps.cached-poetry.outputs.cache-hit != 'true'
      with:
        version: 1.1.5
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Source Poetry env
      run: |
        source "$HOME"/.poetry/env
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Set up dependencies cache
      uses: actions/cache@v2.1.5
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: .venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    # NOTE: Install our root project into the venv cache without busting it
    - name: Set up root + dependencies cache
      uses: actions/cache@v2.1.5
      id: cached-project
      with:
        path: .venv
        key: .venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install root project
      # NOTE: Skipping root project install accelerates cases where only tests have changed
      if: steps.cached-project.outputs.cache-hit != 'true'
      run: poetry install --no-interaction
    - name: Run pytest
      run: poetry run pytest .
